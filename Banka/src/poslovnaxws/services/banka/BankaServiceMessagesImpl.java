/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package poslovnaxws.services.banka;

import java.io.File;
import java.io.IOException;

import javax.xml.XMLConstants;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.util.JAXBSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.Validator;

import org.apache.log4j.Logger;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;

import poslovnaxws.common.NalogWrapper;
import poslovnaxws.common.StatusWrapper;
import poslovnaxws.common.TNalog;
import poslovnaxws.poruke.MT102;
import poslovnaxws.poruke.MT103;

/**
 * This class was generated by Apache CXF 2.6.5 2015-05-21T17:44:10.658+02:00
 * Generated source version: 2.6.5
 * 
 */

@javax.jws.WebService(serviceName = "BankaService", portName = "BankaServicePort", targetNamespace = "PoslovnaXWS/services/banka", wsdlLocation = "http://localhost:8080/banka/services/BankaService?wsdl", endpointInterface = "poslovnaxws.services.banka.BankaServiceMessages")
public class BankaServiceMessagesImpl implements BankaServiceMessages {

	private static final Logger LOG = Logger
			.getLogger(BankaServiceMessagesImpl.class.getName());

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * poslovnaxws.services.banka.BankaServiceMessages#receiveMT103(poslovnaxws
	 * .poruke.MT103 mt103 )*
	 */
	public poslovnaxws.common.StatusWrapper receiveMT103(
			poslovnaxws.poruke.MT103Wrapper mt103) {
		LOG.info("Executing operation receiveMT103");

		poslovnaxws.common.Status _return = null;

		try {
			JAXBContext jc = JAXBContext.newInstance(MT103.class);
			JAXBSource source = new JAXBSource(jc, mt103);

			SchemaFactory sf = SchemaFactory
					.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
			Schema schema = sf.newSchema(new File("WEB-INF/xsd/Poruke.xsd"));
			System.out.println(schema);

			Validator validator = schema.newValidator();
			validator.validate(source);

			System.out.println(mt103);

		} catch (java.lang.Exception ex) {
			LOG.error(ex.getMessage());
		}

		StatusWrapper response = new StatusWrapper();

		response.setWrappedParameter(_return);
		
		return response;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * poslovnaxws.services.banka.BankaServiceMessages#receiveMT102(poslovnaxws
	 * .poruke.MT102 mt102 )*
	 */
	public poslovnaxws.common.StatusWrapper receiveMT102(
			poslovnaxws.poruke.MT102Wrapper mt102) {
		LOG.info("Executing operation receiveMT102");
		System.out.println(mt102);

		MT102 message = mt102.getWrappedParameter();

		poslovnaxws.common.Status _return = new poslovnaxws.common.Status();
		try {
			JAXBContext jc = JAXBContext.newInstance("poslovnaxws.poruke");
			JAXBSource source = new JAXBSource(jc, message);

			SchemaFactory sf = SchemaFactory
					.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
			Schema schema = sf.newSchema(new File(
					"../webapps/banka/WEB-INF/xsd/Poruke.xsd"));
			System.out.println(schema);

			Validator validator = schema.newValidator();
			validator.validate(source);

			_return.setKod(0);
			_return.setOpis("OK");

		} catch (JAXBException e) {
			_return.setKod(1);
			_return.setOpis("JAXB exception");
			LOG.error(e.getMessage());
			e.printStackTrace();
		} catch (SAXParseException e) {
			_return.setKod(2);
			_return.setOpis("Invalid XML");
			LOG.error(e.getMessage());
			e.printStackTrace();
		} catch (SAXException e) {
			_return.setKod(3);
			_return.setOpis("SAX exception");
			LOG.error(e.getMessage());
			e.printStackTrace();
		} catch (IOException e) {
			_return.setKod(4);
			_return.setOpis("IO exception");
			LOG.error(e.getMessage());
			e.printStackTrace();
		} catch (Exception e) {
			_return.setKod(5);
			_return.setOpis("???");
			e.printStackTrace();
		}

		StatusWrapper response = new StatusWrapper();

		response.setWrappedParameter(_return);

		return response;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * poslovnaxws.services.banka.BankaServiceMessages#receiveMT900(poslovnaxws
	 * .poruke.MT9 mt900 )*
	 */
	public poslovnaxws.common.StatusWrapper receiveMT900(
			poslovnaxws.poruke.MT900Wrapper mt900) {
		LOG.info("Executing operation receiveMT900");
		System.out.println(mt900);
		try {
			poslovnaxws.common.StatusWrapper _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * poslovnaxws.services.banka.BankaServiceMessages#receiveMT910(poslovnaxws
	 * .poruke.MT9 mt910 )*
	 */
	public poslovnaxws.common.StatusWrapper receiveMT910(
			poslovnaxws.poruke.MT910Wrapper mt910) {
		LOG.info("Executing operation receiveMT910");
		System.out.println(mt910);
		try {
			poslovnaxws.common.StatusWrapper _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see poslovnaxws.services.banka.BankaServiceMessages#zahtevZaIzvod(*
	 */
	public poslovnaxws.banke.PresekWrapper zahtevZaIzvod(NalogWrapper nalog)
			throws NotificationMessage {
		LOG.info("Executing operation zahtevZaIzvod");
		try {
			poslovnaxws.banke.PresekWrapper _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new NotificationMessage("notificationMessage...");
	}

}
