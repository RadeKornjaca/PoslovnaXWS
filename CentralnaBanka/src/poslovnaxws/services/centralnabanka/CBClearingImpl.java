/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package poslovnaxws.services.centralnabanka;

import java.io.File;
import java.io.IOException;
import java.util.logging.Logger;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.XMLConstants;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.util.JAXBSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.Validator;

import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;

/**
 * This class was generated by Apache CXF 2.6.5 2015-05-26T01:29:42.565+02:00
 * Generated source version: 2.6.5
 * 
 */

@javax.jws.WebService(serviceName = "CBService", portName = "CBClearingPort", targetNamespace = "PoslovnaXWS/services/centralnaBanka", wsdlLocation = "file:/C:/Users/Lazar/Desktop/Faks/PI/PoslovnaXWS/CentralnaBanka/web/WEB-INF/wsdl/CentralnaBanka.wsdl", endpointInterface = "poslovnaxws.services.centralnabanka.CBClearing")
public class CBClearingImpl implements CBClearing {

	private static final Logger LOG = Logger.getLogger(CBClearingImpl.class
			.getName());

	/*
	 * (non-Javadoc)
	 * 
	 * @see poslovnaxws.services.centralnabanka.CBClearing#receiveMT102Clearing(
	 * poslovnaxws.poruke.MT102 mt102 )*
	 */
	public poslovnaxws.common.Status receiveMT102Clearing(
			poslovnaxws.poruke.MT102 mt102) {
		LOG.info("Executing operation receiveMT102Clearing");
		System.out.println(mt102);
		poslovnaxws.common.Status _return = new poslovnaxws.common.Status();
		try {
			JAXBContext jc = JAXBContext.newInstance("poslovnaxws.poruke");
			JAXBSource source = new JAXBSource(jc, mt102);

			SchemaFactory sf = SchemaFactory
					.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
			Schema schema = sf.newSchema(new File(
					"../webapps/CentralnaBanka/CentralnaBanka/WEB-INF/xsd/Poruke.xsd"));
			System.out.println(schema);

			Validator validator = schema.newValidator();
			validator.validate(source);

			_return.setKod(0);
			_return.setOpis("OK");

		} catch (JAXBException e) {
			_return.setKod(1);
			_return.setOpis("JAXB exception");
			LOG.warning(e.getMessage());
		} catch (SAXParseException e) {
			_return.setKod(2);
			_return.setOpis("Invalid XML");
			LOG.warning(e.getMessage());
		} catch (SAXException e) {
			_return.setKod(3);
			_return.setOpis("SAX exception");
			LOG.warning(e.getMessage());
			e.printStackTrace();
		} catch (IOException e) {
			_return.setKod(4);
			_return.setOpis("IO exception");
			LOG.warning(e.getMessage());
		} catch (Exception e) {
			_return.setKod(5);
			_return.setOpis("???");
			e.printStackTrace();
		}
		return _return;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see poslovnaxws.services.centralnabanka.CBClearing#receiveMT103Clearing(
	 * poslovnaxws.poruke.MT103 mt103 )*
	 */
	public poslovnaxws.common.Status receiveMT103Clearing(
			poslovnaxws.poruke.MT103 mt103) {
		LOG.info("Executing operation receiveMT103Clearing");
		System.out.println(mt103);
		try {
			poslovnaxws.common.Status _return = new poslovnaxws.common.Status();
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

}
