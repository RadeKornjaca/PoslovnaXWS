package poslovnaxws.services.centralnabanka;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.5
 * 2015-05-26T01:29:42.639+02:00
 * Generated source version: 2.6.5
 * 
 */
@WebServiceClient(name = "CBService", 
                  wsdlLocation = "file:/C:/Users/Lazar/Desktop/Faks/PI/PoslovnaXWS/CentralnaBanka/web/WEB-INF/wsdl/CentralnaBanka.wsdl",
                  targetNamespace = "PoslovnaXWS/services/centralnaBanka") 
public class CBService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("PoslovnaXWS/services/centralnaBanka", "CBService");
    public final static QName CBAcknlowledgePort = new QName("PoslovnaXWS/services/centralnaBanka", "CBAcknlowledgePort");
    public final static QName CBRTGSPort = new QName("PoslovnaXWS/services/centralnaBanka", "CBRTGSPort");
    public final static QName CBClearingPort = new QName("PoslovnaXWS/services/centralnaBanka", "CBClearingPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/Lazar/Desktop/Faks/PI/PoslovnaXWS/Banka/WEB-INF/wsdl/CentralnaBanka.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CBService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/Lazar/Desktop/Faks/PI/PoslovnaXWS/Banka/WEB-INF/wsdl/CentralnaBanka.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CBService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CBService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CBService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CBService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CBService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CBService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns CBAcknlowledge
     */
    @WebEndpoint(name = "CBAcknlowledgePort")
    public CBAcknlowledge getCBAcknlowledgePort() {
        return super.getPort(CBAcknlowledgePort, CBAcknlowledge.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CBAcknlowledge
     */
    @WebEndpoint(name = "CBAcknlowledgePort")
    public CBAcknlowledge getCBAcknlowledgePort(WebServiceFeature... features) {
        return super.getPort(CBAcknlowledgePort, CBAcknlowledge.class, features);
    }
    /**
     *
     * @return
     *     returns CBRTGS
     */
    @WebEndpoint(name = "CBRTGSPort")
    public CBRTGS getCBRTGSPort() {
        return super.getPort(CBRTGSPort, CBRTGS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CBRTGS
     */
    @WebEndpoint(name = "CBRTGSPort")
    public CBRTGS getCBRTGSPort(WebServiceFeature... features) {
        return super.getPort(CBRTGSPort, CBRTGS.class, features);
    }
    /**
     *
     * @return
     *     returns CBClearing
     */
    @WebEndpoint(name = "CBClearingPort")
    public CBClearing getCBClearingPort() {
        return super.getPort(CBClearingPort, CBClearing.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CBClearing
     */
    @WebEndpoint(name = "CBClearingPort")
    public CBClearing getCBClearingPort(WebServiceFeature... features) {
        return super.getPort(CBClearingPort, CBClearing.class, features);
    }

}
